<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>爬行者小Y</title>
  <subtitle>上善若水</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://developeryang.top/"/>
  <updated>2017-10-01T07:50:51.000Z</updated>
  <id>http://developeryang.top/</id>
  
  <author>
    <name>Yang</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>深入理解JVM（二）-类加载机制</title>
    <link href="http://developeryang.top/2017/10/01/%E6%B7%B1%E5%85%A5%E7%90%86%E8%A7%A3JVM%EF%BC%88%E4%BA%8C%EF%BC%89-%E7%B1%BB%E5%8A%A0%E8%BD%BD%E6%9C%BA%E5%88%B6/"/>
    <id>http://developeryang.top/2017/10/01/深入理解JVM（二）-类加载机制/</id>
    <published>2017-10-01T07:44:04.000Z</published>
    <updated>2017-10-01T07:50:51.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="类加载机制"><a href="#类加载机制" class="headerlink" title="类加载机制"></a>类加载机制</h2><pre><code>虚拟机把描述类的数据从class文件加载到内存，并对数据进行校验，转换解析和初始化，最终形成可以被虚拟机直接使用的Java类型，这就是虚拟机的类加载机制。
</code></pre><h4 id="类加载过程：类装载器把一个类装入JVM中"><a href="#类加载过程：类装载器把一个类装入JVM中" class="headerlink" title="类加载过程：类装载器把一个类装入JVM中"></a>类加载过程：类装载器把一个类装入JVM中</h4><ul>
<li><p>(1) 加载：查找和导入Class文件；</p>
</li>
<li><p>(2) 链接：把类的二进制数据合并到JRE中；</p>
<ul>
<li><p>(a)校验：检查载入Class文件数据的正确性；</p>
</li>
<li><p>(b)准备：给类的静态变量分配存储空间；</p>
</li>
<li><p>(c)解析：将符号引用转成直接引用；</p>
</li>
</ul>
</li>
<li><p>(3) 初始化：对类的静态变量，静态代码块执行初始化操作（执行类构造器clinit()的过程）</p>
</li>
</ul>
<h4 id="动态扩展"><a href="#动态扩展" class="headerlink" title="动态扩展"></a>动态扩展</h4><pre><code>Java程序可以动态扩展是由运行期动态加载和动态链接实现的；比如：如果编写一个使用接口的应用程序，可以等到运行时再指定其实际的实现(多态)，解析过程有时候还可以在初始化之后执行；比如：动态绑定(多态)；
</code></pre><h4 id="类加载器的代理模式：双亲委托机制"><a href="#类加载器的代理模式：双亲委托机制" class="headerlink" title="类加载器的代理模式：双亲委托机制"></a>类加载器的代理模式：双亲委托机制</h4><pre><code>就是某个特定的类加载器在接收到加载类的请求后，首先将加载任务委托给父类加载器，一次追溯，直到最高的爷爷辈的，如果父类加载器可以完成类加载任务，就成功返回；只要父类加载器无法完成次加载任务时，才自己加载。

双亲机制是为了保证java核心库的类型安全，不会出现用户自己能定义java.lang.Object类的情况。
</code></pre>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;类加载机制&quot;&gt;&lt;a href=&quot;#类加载机制&quot; class=&quot;headerlink&quot; title=&quot;类加载机制&quot;&gt;&lt;/a&gt;类加载机制&lt;/h2&gt;&lt;pre&gt;&lt;code&gt;虚拟机把描述类的数据从class文件加载到内存，并对数据进行校验，转换解析和初始化，最终形成可以被虚
    
    </summary>
    
      <category term="technology" scheme="http://developeryang.top/categories/technology/"/>
    
    
      <category term="深入理解JVM" scheme="http://developeryang.top/tags/%E6%B7%B1%E5%85%A5%E7%90%86%E8%A7%A3JVM/"/>
    
  </entry>
  
  <entry>
    <title>深入理解JVM（一）-JVM内存模型</title>
    <link href="http://developeryang.top/2017/10/01/%E6%B7%B1%E5%85%A5%E7%90%86%E8%A7%A3JVM%EF%BC%88%E4%B8%80%EF%BC%89-JVM%E5%86%85%E5%AD%98%E6%A8%A1%E5%9E%8B/"/>
    <id>http://developeryang.top/2017/10/01/深入理解JVM（一）-JVM内存模型/</id>
    <published>2017-10-01T07:41:14.000Z</published>
    <updated>2017-10-01T07:51:19.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="JVM内存模型"><a href="#JVM内存模型" class="headerlink" title="JVM内存模型"></a>JVM内存模型</h2><p><a href="http://otqmskmhz.bkt.clouddn.com/Java%E7%A8%8B%E5%BA%8F%E6%89%A7%E8%A1%8C%E8%BF%87%E7%A8%8B.jpg" target="_blank" rel="external">Java程序执行过程</a></p>
<ul>
<li>Java源代码文件(.java)会被Java编译器编译为字节码文件(.class)</li>
<li>由JVM中的类加载器加载各个类的字节码文件(.class)</li>
<li>JVM执行引擎执行</li>
</ul>
<p>在整个程序执行过程中，JVM会用一段空间来存储程序执行期间需要用到的数据和相关信息，这 段空间一般被称作为Runtime Data Area（运行时数据区），也就是我们常说的JVM内存。</p>
<p><a href="http://otqmskmhz.bkt.clouddn.com/JVM%E5%86%85%E5%AD%98%E5%88%86%E5%B8%83.jpg" target="_blank" rel="external">JVM内存分布</a></p>
<p>Runtime Data Area（运行时数据区）包括 ：</p>
<pre><code>Java栈(VM Stack)、本地方法栈(Native Method Stack)、程序计数器(Program Counter Register)、堆(Heap)、方法区(Method Area)
</code></pre><h3 id="1-Java栈"><a href="#1-Java栈" class="headerlink" title="1. Java栈"></a>1. Java栈</h3><pre><code>Java栈中存放的是一个个的栈帧，每个栈帧对应一个被调用的方法，在栈帧中包括局部变量表(Local Variables)、操作数栈(Operand Stack)、指向当前方法所属的类的运行时常量池（运行时常量池的概念在方法区部分会谈到）的引用(Reference to runtime constant pool)、方法返回地址(Return Address)和一些额外的附加信息。
</code></pre><h3 id="2-本地方法栈"><a href="#2-本地方法栈" class="headerlink" title="2. 本地方法栈"></a>2. 本地方法栈</h3><pre><code>本地方法栈则是为执行本地方法（Native Method）服务的
</code></pre><h3 id="3-程序计数器"><a href="#3-程序计数器" class="headerlink" title="3. 程序计数器"></a>3. 程序计数器</h3><pre><code>用来指示执行哪条指令的，每个线程都需要有自己独立的程序计数器。
由于程序计数器中存储的数据所占空间的大小不会随程序的执行而发生改变，因此，对于程序计数器是不会发生内存溢出现象(OutOfMemory)的。
</code></pre><h3 id="4-堆"><a href="#4-堆" class="headerlink" title="4. 堆"></a>4. 堆</h3><pre><code>堆是用来存储对象本身的以及数组
Java 垃圾收集器管理的主要区域
堆是被所有线程共享的，在JVM中只有一个堆
</code></pre><h3 id="5-方法区"><a href="#5-方法区" class="headerlink" title="5. 方法区"></a>5. 方法区</h3><pre><code>方法区是被线程共享的区域。
在方法区中，存储了每个类的信息（包括类的名称、方法信息、字段信息）、静态变量、常量以及编译器编译后的代码等。
运行时常量池，它是每一个类或接口的常量池的运行时表示形式，在类和接口被加载到JVM后，对应的运行时常量池就被创建出来
</code></pre>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;JVM内存模型&quot;&gt;&lt;a href=&quot;#JVM内存模型&quot; class=&quot;headerlink&quot; title=&quot;JVM内存模型&quot;&gt;&lt;/a&gt;JVM内存模型&lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;http://otqmskmhz.bkt.clouddn.com/Java%E7%
    
    </summary>
    
      <category term="technology" scheme="http://developeryang.top/categories/technology/"/>
    
    
      <category term="深入理解JVM" scheme="http://developeryang.top/tags/%E6%B7%B1%E5%85%A5%E7%90%86%E8%A7%A3JVM/"/>
    
  </entry>
  
  <entry>
    <title>前缀，中缀，后缀表达式转换</title>
    <link href="http://developeryang.top/2017/09/10/%E5%89%8D%E7%BC%80%EF%BC%8C%E4%B8%AD%E7%BC%80%EF%BC%8C%E5%90%8E%E7%BC%80%E8%A1%A8%E8%BE%BE%E5%BC%8F%E8%BD%AC%E6%8D%A2/"/>
    <id>http://developeryang.top/2017/09/10/前缀，中缀，后缀表达式转换/</id>
    <published>2017-09-10T11:45:09.000Z</published>
    <updated>2017-09-10T13:20:50.000Z</updated>
    
    <content type="html"><![CDATA[<h3 id="1-基本概念"><a href="#1-基本概念" class="headerlink" title="1 基本概念"></a>1 基本概念</h3><p>​         在计算机中表达式有三种，<a href="https://zh.wikipedia.org/wiki/%E6%B3%A2%E5%85%B0%E8%A1%A8%E7%A4%BA%E6%B3%95" target="_blank" rel="external">前缀表达式</a>（波兰式），中缀表达式，<a href="https://zh.wikipedia.org/wiki/%E9%80%86%E6%B3%A2%E5%85%B0%E8%A1%A8%E7%A4%BA%E6%B3%95" target="_blank" rel="external">后缀表达式</a>（逆波兰式）。</p>
<p>如表达式：a+b*(c-d)-e/f</p>
<p>前缀表达式：-+a*b-cd/ef</p>
<p>中缀表达式：a+b*(c-d)-e/f</p>
<p>后缀表达式：abcd-*+ef/-</p>
<a id="more"></a>
<h3 id="2-转换原理"><a href="#2-转换原理" class="headerlink" title="2 转换原理"></a>2 转换原理</h3><p>​         原理不难，我们遇到遇到操作数的时候直接输出，当遇到操作符（包括‘（’，‘+’，‘-’，‘*’，‘/’）的时候，我们需要把符号压入到栈中，</p>
<ul>
<li>2.1 当遇到‘）’的时候：</li>
</ul>
<p>​         我们需要依次从栈顶弹出符号，直到遇到‘（’，并且要将‘（’弹出。如：（a<em>（b+c）），栈中的是（</em>（+，当遇到‘）’的时候，我们要弹出‘+’，‘（’。</p>
<ul>
<li>2.2 当遇到‘（’的时候</li>
</ul>
<p>​         此时没什么要说的，直接压栈。</p>
<ul>
<li>2.3 当遇到‘+’，‘-’，‘*’，‘/’的时候：</li>
</ul>
<p>​         我们要把栈顶元素的符号的优先级跟输入的符号的优先级进行对比，如果栈顶优先级高的话，我们就要把栈顶元素依次弹出，直到栈顶的优先级低于输入的优先级或者栈空。</p>
<p>如：a+b+c+d，跟a+b*c+d得到的符号顺序就不一样，原因就是这个优先级的问题。</p>
<ul>
<li>2.4 当遇到操作数的时候：</li>
</ul>
<p>​         毫无疑问，直接输出</p>
<hr>
<h2 id="例题："><a href="#例题：" class="headerlink" title="例题："></a>例题：</h2><h4 id="简便方法"><a href="#简便方法" class="headerlink" title="简便方法"></a>简便方法</h4><p>中缀表达式(a+b) <em> c </em> (d-e/f) 转成前缀，后缀表达式</p>
<blockquote>
<ul>
<li><p>第一步：按照运算符的优先级对所有的运算单位加括号：式子变成了：((a+(b*c))-(d+e)) </p>
</li>
<li><p>第二步：转换前缀与后缀表达式 </p>
</li>
</ul>
</blockquote>
<ul>
<li>前缀：把运算符号移动到对应的括号前面,则变成拉：-( +(a <em>(bc)) +(de)) 。把括号去掉：-+a</em>bc+de 前缀式子出现 </li>
<li>后缀：把运算符号移动到对应的括号后面，则变成拉：((a(bc)<em> )+ (de)+ )- 。把括号去掉：abc</em>+de+- 后缀式子出现 </li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;1-基本概念&quot;&gt;&lt;a href=&quot;#1-基本概念&quot; class=&quot;headerlink&quot; title=&quot;1 基本概念&quot;&gt;&lt;/a&gt;1 基本概念&lt;/h3&gt;&lt;p&gt;​         在计算机中表达式有三种，&lt;a href=&quot;https://zh.wikipedia.org/wiki/%E6%B3%A2%E5%85%B0%E8%A1%A8%E7%A4%BA%E6%B3%95&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;前缀表达式&lt;/a&gt;（波兰式），中缀表达式，&lt;a href=&quot;https://zh.wikipedia.org/wiki/%E9%80%86%E6%B3%A2%E5%85%B0%E8%A1%A8%E7%A4%BA%E6%B3%95&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;后缀表达式&lt;/a&gt;（逆波兰式）。&lt;/p&gt;
&lt;p&gt;如表达式：a+b*(c-d)-e/f&lt;/p&gt;
&lt;p&gt;前缀表达式：-+a*b-cd/ef&lt;/p&gt;
&lt;p&gt;中缀表达式：a+b*(c-d)-e/f&lt;/p&gt;
&lt;p&gt;后缀表达式：abcd-*+ef/-&lt;/p&gt;
    
    </summary>
    
      <category term="technology" scheme="http://developeryang.top/categories/technology/"/>
    
    
      <category term="算法" scheme="http://developeryang.top/tags/%E7%AE%97%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>剑指offer-（6-10）</title>
    <link href="http://developeryang.top/2017/09/07/%E5%89%91%E6%8C%87offer-%EF%BC%886-10%EF%BC%89/"/>
    <id>http://developeryang.top/2017/09/07/剑指offer-（6-10）/</id>
    <published>2017-09-07T06:26:53.000Z</published>
    <updated>2017-09-08T12:48:28.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="6-旋转数组的最小数字"><a href="#6-旋转数组的最小数字" class="headerlink" title="6.旋转数组的最小数字"></a>6.旋转数组的最小数字</h1><blockquote>
<p>把一个数组最开始的若干个元素搬到数组的末尾，我们称之为数组的旋转。 输入一个非递减排序的数组的一个旋转，输出旋转数组的最小元素。 例如数组{3,4,5,1,2}为{1,2,3,4,5}的一个旋转，该数组的最小值为1。 NOTE：给出的所有元素都大于0，若数组大小为0，请返回0。</p>
</blockquote>
<p>考点：查找</p>
<p>一般查找与排序一同出现，掌握二分查找，归并排序和快速排序（必须掌握）。算法比较：额外空间消耗，平均时间复杂度和最差时间复杂度等</p>
<p>如果在一个已经排序或者部分排序的数组中查找一个数字或者统计数字出现次数，尝试使用二分查找</p>
<p>本题通过直接遍历能直接得出，时间复杂度为O(n)。利用旋转特性，使用二分法实现O(logn)</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div></pre></td><td class="code"><pre><div class="line">import java.util.ArrayList;</div><div class="line">public class Solution &#123;</div><div class="line">    public int minNumberInRotateArray(int [] array) &#123;</div><div class="line">        if (array.length == 0) &#123;</div><div class="line">            System.out.println(&quot;Invalid parameters&quot;);</div><div class="line">        &#125;</div><div class="line">        int index1 = 0;</div><div class="line">        int index2 = array.length - 1;</div><div class="line">        int indexmid = index1;</div><div class="line">        while (array[index1] &gt;= array[index2]) &#123;</div><div class="line">            if (index2 - index1 == 1) &#123;</div><div class="line">                indexmid = index2;</div><div class="line">                break;</div><div class="line">            &#125;</div><div class="line">            indexmid = (index1 + index2) / 2;</div><div class="line">            if (array[index1] == array[index2] &amp;&amp; array[indexmid] == array[index1]) &#123;</div><div class="line">                return MinInOrder(array, index1, index2);</div><div class="line">            &#125;</div><div class="line">            if (array[indexmid] &gt;= array[index1]) &#123;</div><div class="line">                index1 = indexmid;</div><div class="line">            &#125;</div><div class="line">            else if (array[indexmid] &lt;= array[index2]) &#123;</div><div class="line">                index2 = indexmid;</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">        return array[indexmid];</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    private  static int MinInOrder(int[] array, int index1, int index2)&#123;</div><div class="line">        int result = array[index1];</div><div class="line">        for (int i = index1 +1; i &lt;= index2; ++i)&#123;</div><div class="line">            if (result &gt; array[i]) &#123;</div><div class="line">                result = array[i];</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">        return result;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h1 id="7-斐波那契数列"><a href="#7-斐波那契数列" class="headerlink" title="7. 斐波那契数列"></a>7. 斐波那契数列</h1><blockquote>
<p>大家都知道斐波那契数列，现在要求输入一个整数n，请你输出斐波那契数列的第n项。 n&lt;=39</p>
</blockquote>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line">public class Solution &#123;</div><div class="line">    public int Fibonacci(int n) &#123;</div><div class="line">        int[] result = &#123;0, 1&#125;;</div><div class="line">        if (n &lt; 2) &#123;</div><div class="line">            return result[n];</div><div class="line">        &#125;</div><div class="line">        int fibMinusOne = 1;</div><div class="line">        int fibMinusTwo = 0;</div><div class="line">        int fibN = 0;</div><div class="line">        for (int i = 2; i &lt;= n; ++i) &#123;</div><div class="line">            fibN = fibMinusOne + fibMinusTwo;</div><div class="line">            </div><div class="line">            fibMinusTwo = fibMinusOne;</div><div class="line">            fibMinusOne = fibN;</div><div class="line">        &#125;</div><div class="line">        return fibN;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;6-旋转数组的最小数字&quot;&gt;&lt;a href=&quot;#6-旋转数组的最小数字&quot; class=&quot;headerlink&quot; title=&quot;6.旋转数组的最小数字&quot;&gt;&lt;/a&gt;6.旋转数组的最小数字&lt;/h1&gt;&lt;blockquote&gt;
&lt;p&gt;把一个数组最开始的若干个元素搬到数组的末尾
    
    </summary>
    
      <category term="technology" scheme="http://developeryang.top/categories/technology/"/>
    
    
      <category term="算法" scheme="http://developeryang.top/tags/%E7%AE%97%E6%B3%95/"/>
    
      <category term="剑指offer" scheme="http://developeryang.top/tags/%E5%89%91%E6%8C%87offer/"/>
    
  </entry>
  
  <entry>
    <title>剑指offer-（1-5）</title>
    <link href="http://developeryang.top/2017/09/01/%E5%89%91%E6%8C%87offer-%EF%BC%881-5%EF%BC%89/"/>
    <id>http://developeryang.top/2017/09/01/剑指offer-（1-5）/</id>
    <published>2017-09-01T14:40:06.000Z</published>
    <updated>2017-09-07T06:30:05.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="1-二维数组中的查找"><a href="#1-二维数组中的查找" class="headerlink" title="1.二维数组中的查找"></a>1.二维数组中的查找</h1><blockquote>
<p>在一个二维数组中，每一行都按照从左到右递增的顺序排序，每一列都按照从上到下递增的顺序排序。请完成一个函数，输入这样的一个二维数组和一个整数，判断数组中是否含有该整数。</p>
</blockquote>
<p>考点：数组</p>
<ul>
<li>1.直接使用两次嵌套遍历。时间复杂度O(n^2)</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line">public class Solution &#123;  </div><div class="line">    public boolean Find(int [][] array,int target) &#123;  </div><div class="line">        for(int i=0;i&lt;array.length;i++)&#123;  </div><div class="line">            for(int j=0;j&lt;array[i].length;j++)&#123;  </div><div class="line">                if(array[i][j]==target)&#123;  </div><div class="line">                    return true;  </div><div class="line">                &#125;         </div><div class="line">            &#125;  </div><div class="line">        &#125;  </div><div class="line">       return false;   </div><div class="line">    &#125;  </div><div class="line">&#125;</div></pre></td></tr></table></figure>
<a id="more"></a>
<ul>
<li>2.改进：根据题目，每行每列都是递增，则找到矩阵右上角数字，判断它和target大小，它小则行减1，它大则列减一。时间复杂度O(n)</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div></pre></td><td class="code"><pre><div class="line">public class Problem_1 &#123;</div><div class="line">    public static boolean Find(int[][] array, int target) &#123;</div><div class="line">        boolean found = false;</div><div class="line">        int rows = array.length;</div><div class="line">        int columns = array[0].length;</div><div class="line">        if (array != null &amp;&amp; rows &gt; 0 &amp;&amp; columns &gt; 0 ) &#123;</div><div class="line">            int row = 0;</div><div class="line">            int column = columns - 1;</div><div class="line">            while (row &lt; rows &amp;&amp; column &gt;= 0) &#123;</div><div class="line">                if (array[row][column] == target) &#123;</div><div class="line">                    found = true;</div><div class="line">                    break;</div><div class="line">                &#125;</div><div class="line">                else if (array[row][column] &gt; target) &#123;</div><div class="line">                    --column;</div><div class="line">                &#125;</div><div class="line">                else</div><div class="line">                    ++row;</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">        return found;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h1 id="2-替换空格"><a href="#2-替换空格" class="headerlink" title="2.替换空格"></a>2.替换空格</h1><blockquote>
<p>请实现一个函数，将一个字符串中的空格替换成“%20”。例如，当字符串为We Are Happy.则经过替换之后的字符串为We%20Are%20Happy。<br>考点：字符串</p>
</blockquote>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">public class Solution &#123;</div><div class="line">    public String replaceSpace(StringBuffer str) &#123;</div><div class="line">    	 String str1 = str.toString();</div><div class="line">        String str2 = str1.replace(&quot; &quot;, &quot;%20&quot;);</div><div class="line">        return str2;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h1 id="3-从尾到头打印链表"><a href="#3-从尾到头打印链表" class="headerlink" title="3.从尾到头打印链表"></a>3.从尾到头打印链表</h1><blockquote>
<p>输入一个链表，从尾到头打印链表每个节点的值。</p>
</blockquote>
<p>考点：链表<br>解题点：先进后出，使用栈。递归的本质就是栈。<br>使用栈</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div></pre></td><td class="code"><pre><div class="line">/**</div><div class="line">*    public class ListNode &#123;</div><div class="line">*        int val;</div><div class="line">*        ListNode next = null;</div><div class="line">*</div><div class="line">*        ListNode(int val) &#123;</div><div class="line">*            this.val = val;</div><div class="line">*        &#125;</div><div class="line">*    &#125;</div><div class="line">*</div><div class="line">*/</div><div class="line">import java.util.Stack;</div><div class="line">import java.util.ArrayList;</div><div class="line">public class Solution &#123;</div><div class="line">    public ArrayList&lt;Integer&gt; printListFromTailToHead(ListNode listNode) &#123;</div><div class="line">         Stack&lt;Integer&gt; sk = new Stack&lt;Integer&gt;();</div><div class="line">        while(listNode!=null)</div><div class="line">        &#123;</div><div class="line">            sk.push(listNode.val);</div><div class="line">            listNode=listNode.next;</div><div class="line">        &#125;</div><div class="line">         ArrayList&lt;Integer&gt; al = new ArrayList&lt;Integer&gt;();</div><div class="line">        while(!sk.isEmpty())</div><div class="line">        &#123;</div><div class="line">            al.add(sk.pop());</div><div class="line">        &#125;</div><div class="line">        return al;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>使用递归</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div></pre></td><td class="code"><pre><div class="line">/**</div><div class="line">*    public class ListNode &#123;</div><div class="line">*        int val;</div><div class="line">*        ListNode next = null;</div><div class="line">*</div><div class="line">*        ListNode(int val) &#123;</div><div class="line">*            this.val = val;</div><div class="line">*        &#125;</div><div class="line">*    &#125;</div><div class="line">*</div><div class="line">*/</div><div class="line">import java.util.ArrayList;</div><div class="line">public class Solution &#123;</div><div class="line">    public ArrayList&lt;Integer&gt; printListFromTailToHead(ListNode listNode) &#123;</div><div class="line">        ArrayList&lt;Integer&gt; list = new ArrayList&lt;Integer&gt;();</div><div class="line">        if (list == null)&#123;</div><div class="line">            return list;</div><div class="line">        &#125;</div><div class="line">        ListNode pnode = listNode;</div><div class="line">        if(pnode != null)&#123;</div><div class="line">            if(pnode.next != null)&#123;</div><div class="line">                list = printListFromTailToHead(pnode.next);</div><div class="line">            &#125;</div><div class="line">            list.add(pnode.val);</div><div class="line">        &#125;</div><div class="line">        return list;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>当链表很长时，则函数调用层级很深，导致函数调用栈溢出。</p>
<h1 id="4-重建二叉树"><a href="#4-重建二叉树" class="headerlink" title="4.重建二叉树"></a>4.重建二叉树</h1><blockquote>
<p>输入某二叉树的前序遍历和中序遍历的结果，请重建出该二叉树。假设输入的前序遍历和中序遍历的结果中都不含重复的数字。例如输入前序遍历序列{1,2,4,7,3,5,6,8}和中序遍历序列{4,7,2,1,5,3,8,6}，则重建二叉树并返回。</p>
</blockquote>
<p>考点：二叉树<br>先序中序后序遍历的实现方法都有递归和循环实现方法。<br>求最大（最小值）时可以使用最大（最小）堆来解决。</p>
<ul>
<li>1.根据先序和中序的特点，根据先序第一个值找到根节点;</li>
<li>2.在中序中找到根节点，则根节点前面就是左子树，后面就是右子树；</li>
<li>3.通过递归，构建新二叉树的左子树和右子树。</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div></pre></td><td class="code"><pre><div class="line">/**</div><div class="line"> * Definition for binary tree</div><div class="line"> * public class TreeNode &#123;</div><div class="line"> *     int val;</div><div class="line"> *     TreeNode left;</div><div class="line"> *     TreeNode right;</div><div class="line"> *     TreeNode(int x) &#123; val = x; &#125;</div><div class="line"> * &#125;</div><div class="line"> */</div><div class="line">public class Solution &#123;</div><div class="line">    public TreeNode reConstructBinaryTree(int [] pre,int [] in) &#123;</div><div class="line">        TreeNode root = inputTree(pre, 0, pre.length-1, in, 0, in.length-1);</div><div class="line">        return root;</div><div class="line">    &#125;</div><div class="line">    public TreeNode inputTree(int[] pre, int startPre, int endPre, int[] in, int startIn, int endIn)&#123;</div><div class="line">        if(startPre &gt; endPre || startIn &gt; endIn)&#123;</div><div class="line">            return null;</div><div class="line">        &#125;</div><div class="line">        TreeNode root = new TreeNode(pre[startPre]);</div><div class="line">        for(int i=startIn;i&lt;=endIn;i++)&#123;</div><div class="line">            if(in[i]==pre[startPre])&#123;</div><div class="line">                root.left=inputTree(pre,startPre+1,startPre+i-startIn,in,startIn,i-1);</div><div class="line">                root.right=inputTree(pre,startPre+i-startIn+1,endPre,in,i+1,endIn);</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">        return root;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h1 id="5-用两个栈实现队列"><a href="#5-用两个栈实现队列" class="headerlink" title="5.用两个栈实现队列"></a>5.用两个栈实现队列</h1><blockquote>
<p>用两个栈来实现一个队列，完成队列的Push和Pop操作。 队列中的元素为int类型。</p>
</blockquote>
<p>考点：栈和队列</p>
<p>栈：先去后出；队列：先进先出</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div></pre></td><td class="code"><pre><div class="line">import java.util.Stack;</div><div class="line"></div><div class="line">public class Solution &#123;</div><div class="line">    Stack&lt;Integer&gt; stack1 = new Stack&lt;Integer&gt;();</div><div class="line">    Stack&lt;Integer&gt; stack2 = new Stack&lt;Integer&gt;();</div><div class="line">    </div><div class="line">    public void push(int node) &#123;</div><div class="line">        stack1.push(new Integer(node));</div><div class="line">    &#125;</div><div class="line">    </div><div class="line">    public int pop() &#123;</div><div class="line">    if(stack2.empty())&#123;</div><div class="line">        while(!stack1.empty())&#123;</div><div class="line">            stack2.push(stack1.pop());</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">    if(stack2.empty())&#123;</div><div class="line">        System.out.println(&quot;null&quot;);</div><div class="line">    &#125;</div><div class="line">    return stack2.pop().intValue();</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;1-二维数组中的查找&quot;&gt;&lt;a href=&quot;#1-二维数组中的查找&quot; class=&quot;headerlink&quot; title=&quot;1.二维数组中的查找&quot;&gt;&lt;/a&gt;1.二维数组中的查找&lt;/h1&gt;&lt;blockquote&gt;
&lt;p&gt;在一个二维数组中，每一行都按照从左到右递增的顺序排序，每一列都按照从上到下递增的顺序排序。请完成一个函数，输入这样的一个二维数组和一个整数，判断数组中是否含有该整数。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;考点：数组&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;1.直接使用两次嵌套遍历。时间复杂度O(n^2)&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;11&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;12&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;public class Solution &amp;#123;  &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    public boolean Find(int [][] array,int target) &amp;#123;  &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        for(int i=0;i&amp;lt;array.length;i++)&amp;#123;  &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            for(int j=0;j&amp;lt;array[i].length;j++)&amp;#123;  &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                if(array[i][j]==target)&amp;#123;  &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                    return true;  &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                &amp;#125;         &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            &amp;#125;  &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &amp;#125;  &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;       return false;   &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;#125;  &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="technology" scheme="http://developeryang.top/categories/technology/"/>
    
    
      <category term="算法" scheme="http://developeryang.top/tags/%E7%AE%97%E6%B3%95/"/>
    
      <category term="剑指offer" scheme="http://developeryang.top/tags/%E5%89%91%E6%8C%87offer/"/>
    
  </entry>
  
  <entry>
    <title>Mac安装MySQL解决root密码问题</title>
    <link href="http://developeryang.top/2017/08/16/Mac%E5%AE%89%E8%A3%85MySQL%E8%A7%A3%E5%86%B3root%E5%AF%86%E7%A0%81%E9%97%AE%E9%A2%98/"/>
    <id>http://developeryang.top/2017/08/16/Mac安装MySQL解决root密码问题/</id>
    <published>2017-08-16T08:51:30.000Z</published>
    <updated>2017-08-16T08:55:08.000Z</updated>
    
    <content type="html"><![CDATA[<h3 id="mac重置mysql的root密码方法记录"><a href="#mac重置mysql的root密码方法记录" class="headerlink" title="mac重置mysql的root密码方法记录"></a>mac重置mysql的root密码方法记录</h3><h3 id="原因：在MySQL安装过程中，有一步给你一个初始Root密码。由于自己没有记录导致下面的问题👇："><a href="#原因：在MySQL安装过程中，有一步给你一个初始Root密码。由于自己没有记录导致下面的问题👇：" class="headerlink" title="原因：在MySQL安装过程中，有一步给你一个初始Root密码。由于自己没有记录导致下面的问题👇："></a>原因：在MySQL安装过程中，有一步给你一个初始Root密码。由于自己没有记录导致下面的问题👇：</h3><p>ERROR 1045 (28000): Access denied for user ‘root’@’localhost’ (using password: NO)</p>
<a id="more"></a>
<h3 id="解决办法："><a href="#解决办法：" class="headerlink" title="解决办法："></a>解决办法：</h3><p><a href="http://blog.csdn.net/lisongjia123/article/details/57418989" target="_blank" rel="external">学自别人的blog</a></p>
<p>MySQL中提供了一种免去密码校验进入数据库的方法，使用这种方法登入到数据库，将默认密码替换掉。</p>
<h4 id="一、找到Mysql配置文件"><a href="#一、找到Mysql配置文件" class="headerlink" title="一、找到Mysql配置文件"></a>一、找到Mysql配置文件</h4><p>使用指令</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">cd /usr/local/mysql</div><div class="line">ls</div><div class="line">cd support-files/</div><div class="line">ls</div><div class="line">sudo vim my-default.cnf</div></pre></td></tr></table></figure>
<p>注意：使用sudo，因为my-default.cnf配置文件不具备写权限。</p>
<h4 id="二、修改配置文件"><a href="#二、修改配置文件" class="headerlink" title="二、修改配置文件"></a>二、修改配置文件</h4><p>打开刚才我们找到的配置文件，然后在里面找到 [mysqld] 这一项，然后在该配置项下添加 </p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"></div><div class="line">skip-grant-tables</div></pre></td></tr></table></figure>
<p>这个配置，然后保存文件。 </p>
<h4 id="三、重启mysql服务"><a href="#三、重启mysql服务" class="headerlink" title="三、重启mysql服务"></a>三、重启mysql服务</h4><p>在系统偏好中进行重启</p>
<h4 id="四、免密登录MySQL"><a href="#四、免密登录MySQL" class="headerlink" title="四、免密登录MySQL"></a>四、免密登录MySQL</h4><p>然后再次进入到终端当中，敲入 </p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"></div><div class="line">mysql -u root -p</div></pre></td></tr></table></figure>
<p>命令然后回车，当需要输入密码时，直接按enter键，便可以不用密码登录到数据库当中</p>
<h4 id="五、修改默认的密码"><a href="#五、修改默认的密码" class="headerlink" title="五、修改默认的密码"></a>五、修改默认的密码</h4><p>使用 </p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"></div><div class="line">set password for &apos;root&apos;@&apos;localhost&apos;=password(&apos;新密码&apos;);</div></pre></td></tr></table></figure>
<p>命令修改新的密码。</p>
<h4 id="六、检验成果"><a href="#六、检验成果" class="headerlink" title="六、检验成果"></a>六、检验成果</h4><p>我们改完默认密码后，再次进入到之前的配置文件中，将我们跳过密码的那个配置行给删除掉，变为系统原先的配置。重启MySQL服务，下次再登录的时候便可以解决掉这个问题了。</p>
]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;mac重置mysql的root密码方法记录&quot;&gt;&lt;a href=&quot;#mac重置mysql的root密码方法记录&quot; class=&quot;headerlink&quot; title=&quot;mac重置mysql的root密码方法记录&quot;&gt;&lt;/a&gt;mac重置mysql的root密码方法记录&lt;/h3&gt;&lt;h3 id=&quot;原因：在MySQL安装过程中，有一步给你一个初始Root密码。由于自己没有记录导致下面的问题👇：&quot;&gt;&lt;a href=&quot;#原因：在MySQL安装过程中，有一步给你一个初始Root密码。由于自己没有记录导致下面的问题👇：&quot; class=&quot;headerlink&quot; title=&quot;原因：在MySQL安装过程中，有一步给你一个初始Root密码。由于自己没有记录导致下面的问题👇：&quot;&gt;&lt;/a&gt;原因：在MySQL安装过程中，有一步给你一个初始Root密码。由于自己没有记录导致下面的问题👇：&lt;/h3&gt;&lt;p&gt;ERROR 1045 (28000): Access denied for user ‘root’@’localhost’ (using password: NO)&lt;/p&gt;
    
    </summary>
    
      <category term="technology" scheme="http://developeryang.top/categories/technology/"/>
    
    
      <category term="MySQL" scheme="http://developeryang.top/tags/MySQL/"/>
    
  </entry>
  
  <entry>
    <title>牛客20170809算法总结</title>
    <link href="http://developeryang.top/2017/08/15/%E7%89%9B%E5%AE%A220170809%E7%AE%97%E6%B3%95%E6%80%BB%E7%BB%93/"/>
    <id>http://developeryang.top/2017/08/15/牛客20170809算法总结/</id>
    <published>2017-08-15T08:49:44.000Z</published>
    <updated>2017-08-15T09:17:31.000Z</updated>
    
    <content type="html"><![CDATA[<h4 id="0-铺垫：数组中的最大子数组"><a href="#0-铺垫：数组中的最大子数组" class="headerlink" title="0.铺垫：数组中的最大子数组"></a>0.铺垫：数组中的最大子数组</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div></pre></td><td class="code"><pre><div class="line">public class SubArrayMaxSum &#123;</div><div class="line">    public static int maxSum(int[] arr) &#123;</div><div class="line">        if (arr == null || arr.length == 0)&#123;</div><div class="line">            return 0;</div><div class="line">        &#125;</div><div class="line">        int max = Integer.MIN_VALUE;</div><div class="line">        int cur = 0;</div><div class="line">        for (int i = 0; i != arr.length; i++)&#123;</div><div class="line">            cur += arr[i];</div><div class="line">            max = Math.max(max, cur);</div><div class="line">            cur = cur &lt; 0 ? 0:cur;</div><div class="line">        &#125;</div><div class="line">        return max;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    public static void main(String[] args)&#123;</div><div class="line">        int[] arr1 = &#123;-2, -3, -5, 40, -10, -10, 100, 1&#125;;</div><div class="line">        System.out.println(maxSum(arr1));</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<a id="more"></a>
<h4 id="1-给定一个矩阵matrix，其中的值有正、有负、有0，返回子矩阵-的最大累加和。"><a href="#1-给定一个矩阵matrix，其中的值有正、有负、有0，返回子矩阵-的最大累加和。" class="headerlink" title="1.给定一个矩阵matrix，其中的值有正、有负、有0，返回子矩阵 的最大累加和。"></a>1.给定一个矩阵matrix，其中的值有正、有负、有0，返回子矩阵 的最大累加和。</h4><p>例如，矩阵matrix为:</p>
<p>-90 48  78</p>
<p>64  -40 64</p>
<p>-81 -7  66</p>
<p>其中，最大累加和的子矩阵为:</p>
<p>48  78</p>
<p>-40 64</p>
<p>-7  66</p>
<p>所以返回累加和209。 例如，matrix为:</p>
<p>-1 -1 -1</p>
<p>-1  2  2</p>
<p>-1 -1 -1</p>
<p>其中，最大累加和的子矩阵为: </p>
<p>2 2</p>
<p>所以返回累加和4。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div></pre></td><td class="code"><pre><div class="line"></div><div class="line">public class SubMatrixMaxSum &#123;</div><div class="line">    public static int maxSum(int[][] m)&#123;</div><div class="line">        if (m == null || m.length == 0 || m[0].length ==0)&#123;</div><div class="line">            return 0;</div><div class="line">        &#125;</div><div class="line">        int max = Integer.MIN_VALUE;</div><div class="line">        int cur = 0;</div><div class="line">        int[] s = null;</div><div class="line">        for (int i = 0; i != m.length; i++)&#123;</div><div class="line">            s = new int[m[0].length];</div><div class="line">            for (int j = i; j != m[0].length; j++)&#123;</div><div class="line">                cur = 0;</div><div class="line">                for (int k =0; k != s.length; k++)&#123;</div><div class="line">                    s[k] += m[j][k];</div><div class="line">                    cur += s[k];</div><div class="line">                    max = Math.max(max, cur);</div><div class="line">                    cur = cur &lt; 0 ? 0 : cur;</div><div class="line">                &#125;</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">        return max;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    public static void main(String[] args)&#123;</div><div class="line">        int[][] matrix =&#123;&#123; -90, 48, 78 &#125;, &#123; 64, -40, 64 &#125;, &#123; -81, -7, 66 &#125;&#125;;</div><div class="line">        System.out.println(maxSum(matrix));</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>关键点：累加</p>
<h4 id="2-给定一个数组，每个位置的值代表一个高度。那么整个数组可以看过是一个直方图。如果把这个直方图当做容器的话，求这个容器能装多少水。"><a href="#2-给定一个数组，每个位置的值代表一个高度。那么整个数组可以看过是一个直方图。如果把这个直方图当做容器的话，求这个容器能装多少水。" class="headerlink" title="2.给定一个数组，每个位置的值代表一个高度。那么整个数组可以看过是一个直方图。如果把这个直方图当做容器的话，求这个容器能装多少水。"></a>2.给定一个数组，每个位置的值代表一个高度。那么整个数组可以看过是一个直方图。如果把这个直方图当做容器的话，求这个容器能装多少水。</h4><p>例如:<br>3,1,2,4 代表第一个位置高度为3，第二个位置高度为1，第三个位置高度为2， 第四个位置高度为4。<br>3,1,2,4这个数组代表的容器可以装3格的水。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div></pre></td><td class="code"><pre><div class="line"></div><div class="line">public class WaterMaxProblem &#123;</div><div class="line">    public static int getWater(int[] arr)&#123;</div><div class="line">        if (arr == null || arr.length &lt; 3)&#123;</div><div class="line">            return 0;</div><div class="line">        &#125;</div><div class="line">        int value = 0;</div><div class="line">        int leftMax = arr[0];</div><div class="line">        int rightMax = arr[arr.length - 1];</div><div class="line">        int l = 1;</div><div class="line">        int r = arr.length - 2;</div><div class="line">        while ( l &lt;= r)&#123;</div><div class="line">            if (leftMax &lt;= rightMax)&#123;</div><div class="line">                value += Math.max(0, leftMax - arr[l]);</div><div class="line">                leftMax = Math.max(leftMax, arr[l++]);</div><div class="line">            &#125;else&#123;</div><div class="line">                value += Math.max(0, rightMax - arr[r]);</div><div class="line">                rightMax = Math.max(rightMax, arr[r--]);</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">        return value;</div><div class="line">    &#125;</div><div class="line"></div><div class="line"></div><div class="line">    public static void main(String[] args)&#123;</div><div class="line">        int[] arr = &#123;3, 1, 2, 4&#125;;</div><div class="line">        System.out.println(getWater(arr));</div><div class="line"></div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h4 id="3-给定一个数组，长度大于2。找出不相交的两个子数组，情况是-很多的。请返回这么多情况中，两个不相交子数组最大的和。"><a href="#3-给定一个数组，长度大于2。找出不相交的两个子数组，情况是-很多的。请返回这么多情况中，两个不相交子数组最大的和。" class="headerlink" title="3.给定一个数组，长度大于2。找出不相交的两个子数组，情况是 很多的。请返回这么多情况中，两个不相交子数组最大的和。"></a>3.给定一个数组，长度大于2。找出不相交的两个子数组，情况是 很多的。请返回这么多情况中，两个不相交子数组最大的和。</h4><p>例如:<br>-1,3,4,-9,1,2<br>当两个不相交子数组为[3,4]和[1,2]时，可以得到最大的和为 10。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div></pre></td><td class="code"><pre><div class="line"></div><div class="line">public class TwoSubArrayMaxSum &#123;</div><div class="line">    public static int twoSubArrayMaxSum(int[] arr)&#123;</div><div class="line">        if (arr == null || arr.length &lt; 2)&#123;</div><div class="line">            return 0;</div><div class="line">        &#125;</div><div class="line">        int[] rArray = new int[arr.length];</div><div class="line">        int max = Integer.MIN_VALUE;</div><div class="line">        int cur = 0;</div><div class="line">        for (int i = arr.length - 1; i &gt; 0; i--)&#123;</div><div class="line">            cur += arr[i];</div><div class="line">            max = Math.max(cur, max);</div><div class="line">            rArray[i] = max;</div><div class="line">            cur = cur &lt; 0 ? 0 : cur;</div><div class="line">        &#125;</div><div class="line">        int res = Integer.MIN_VALUE;</div><div class="line">        max = Integer.MIN_VALUE;</div><div class="line">        cur = 0;</div><div class="line">        for (int i = 0; i &lt; arr.length - 1; i++)&#123;</div><div class="line">            cur += arr[i];</div><div class="line">            max = Math.max(max, cur);</div><div class="line">            res = Math.max(res, max + rArray[i + 1]);</div><div class="line">            cur = cur &lt; 0 ? 0 : cur;</div><div class="line">        &#125;</div><div class="line">        return res;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    public static void main(String[] args) &#123;</div><div class="line">        int[] arr = &#123;-1, 3, 4, -9, 1, 2&#125;;</div><div class="line">        System.out.println(twoSubArrayMaxSum(arr));</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>使用预处理数组rArray[]，得到从右往左的最大子数组</p>
<h4 id="4-给定一个长度为N-N-gt-1-的整型数组arr，可以划分成左右两个部分，左部分为arr-0-K-，右部分为arr-K-1-N-1-，K可以取-值的范围是-0-N-2-。求这么多划分方案中，左部分中的最大值-减去右部分最大值的绝对值中，最大是多少"><a href="#4-给定一个长度为N-N-gt-1-的整型数组arr，可以划分成左右两个部分，左部分为arr-0-K-，右部分为arr-K-1-N-1-，K可以取-值的范围是-0-N-2-。求这么多划分方案中，左部分中的最大值-减去右部分最大值的绝对值中，最大是多少" class="headerlink" title="4.给定一个长度为N(N&gt;1)的整型数组arr，可以划分成左右两个部分，左部分为arr[0..K]，右部分为arr[K+1..N-1]，K可以取 值的范围是[0,N-2]。求这么多划分方案中，左部分中的最大值 减去右部分最大值的绝对值中，最大是多少?"></a>4.给定一个长度为N(N&gt;1)的整型数组arr，可以划分成左右两个部分，左部分为arr[0..K]，右部分为arr[K+1..N-1]，K可以取 值的范围是[0,N-2]。求这么多划分方案中，左部分中的最大值 减去右部分最大值的绝对值中，最大是多少?</h4><p>例如:[2,7,3,1,1]，当左部分为[2,7]，右部分为[3,1,1]时， 左部分中的最大值减去右部分最大值的绝对值为4。当左部分为 [2,7,3]，右部分为[1,1]时，左部分中的最大值减去右部分最 大值的绝对值为6。还有很多划分方案，但最终返回6。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line"></div><div class="line">public class MaxABSBetweenLeftAndRight &#123;</div><div class="line">    public static int maxABS(int[] arr)&#123;</div><div class="line">        int max = Integer.MIN_VALUE;</div><div class="line">        for (int i = 0; i &lt; arr.length; i++)&#123;</div><div class="line">            max = Math.max(arr[i], max);</div><div class="line">        &#125;</div><div class="line">        return max - Math.min(arr[0], arr[arr.length - 1]);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    public static void main(String[] args)&#123;</div><div class="line">        int[] arr = &#123;2, 7, 3, 1, 1&#125;;</div><div class="line">        System.out.println(maxABS(arr));</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>理解其中的诀窍：Max在左，则与最右边的数相减取MaxABS;Max在右，则与最左边的数相减取MaxABS。两者比较去大数。</p>
]]></content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;0-铺垫：数组中的最大子数组&quot;&gt;&lt;a href=&quot;#0-铺垫：数组中的最大子数组&quot; class=&quot;headerlink&quot; title=&quot;0.铺垫：数组中的最大子数组&quot;&gt;&lt;/a&gt;0.铺垫：数组中的最大子数组&lt;/h4&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;11&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;12&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;13&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;14&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;15&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;16&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;17&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;18&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;19&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;20&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;public class SubArrayMaxSum &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    public static int maxSum(int[] arr) &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        if (arr == null || arr.length == 0)&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            return 0;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        int max = Integer.MIN_VALUE;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        int cur = 0;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        for (int i = 0; i != arr.length; i++)&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            cur += arr[i];&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            max = Math.max(max, cur);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            cur = cur &amp;lt; 0 ? 0:cur;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        return max;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    public static void main(String[] args)&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        int[] arr1 = &amp;#123;-2, -3, -5, 40, -10, -10, 100, 1&amp;#125;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        System.out.println(maxSum(arr1));&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="technology" scheme="http://developeryang.top/categories/technology/"/>
    
    
      <category term="算法" scheme="http://developeryang.top/tags/%E7%AE%97%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>生活感悟</title>
    <link href="http://developeryang.top/2017/08/05/%E7%94%9F%E6%B4%BB%E6%84%9F%E6%82%9F/"/>
    <id>http://developeryang.top/2017/08/05/生活感悟/</id>
    <published>2017-08-05T14:20:18.000Z</published>
    <updated>2017-08-06T06:11:47.000Z</updated>
    
    <content type="html"><![CDATA[<p>研究生生活已经过了大半，从当初的后悔读研，不喜欢老师分配的项目，不喜欢被困在实验室枯燥的过日子，到现在的淡然面对，可能是因为离毕业不远了吧。现在想想当初自己考研应该是有逃离工作的念想，也有对自己能力的不信任。现在想想，我应该首先让自己强大起来，拥有追求梦想和决定生活的能力。</p>
<p>说说这研究生学到的，主要是掌握了时间和分析解决问题的能力</p>
<a id="more"></a>
<h3 id="1-掌握时间：学自水湄物语的《30岁前的每一天》，使用记事本来规划自己的时间和生活"><a href="#1-掌握时间：学自水湄物语的《30岁前的每一天》，使用记事本来规划自己的时间和生活" class="headerlink" title="1.掌握时间：学自水湄物语的《30岁前的每一天》，使用记事本来规划自己的时间和生活"></a>1.掌握时间：学自水湄物语的《30岁前的每一天》，使用记事本来规划自己的时间和生活</h3><pre><code>1.至少连续7天忠实记录下每天超过30分钟的活动，几点到几点，干了什么，找出自己的时间都用去了哪里，接下来就可以根据PDCA模型循环调整每天的活动（Plan计划-D执行-Check反馈-Adjust调整）
2.在一天的开始写下自己今天要做的每一件事，记得任务不要排太慢，要预留时间空间，并且把任务分解成2小时内能完成的
3.估算每一件事需要用到的时间
4.对写下的事情进行取舍，做出排序，人的时间是有限的，一定要为重要的事情留出最多的时间和精力
5.根据排序一件件完成笔记本上写下的事情，并记录下实际使用的时间（重要的是执行！）
6.反馈和调整，记录当日需要反省的事情，找出自认为不足的地方，根据反馈内容，提出小小的改进意见，并在第二天就执行
7.学习和实践，记录当天对自己有所触动的事情或收获，并结合自己的情况想想可不可以移到自己的身上实践

***每天重复2~7***

8.一个月后，一年后，根据6、7建立自己的经验库
9.每月的计划可以分为几大模块，比如工作计划、生活与健康、学习计划等

其他的么，学会给自己的生活增加一点仪式感，努力让生活慢一点，庄严一点，色彩丰富一点。
</code></pre><h3 id="2-分析解决问题的能力"><a href="#2-分析解决问题的能力" class="headerlink" title="2.分析解决问题的能力"></a>2.分析解决问题的能力</h3><pre><code>1.分析问题不要着急，先把问题搞明白
2.把大问题分成一个个小问题（这是要学习的）
3.分清楚具体需求，一步一步实现（反而这个是最简单的）
————这在编程开发里很实用
</code></pre><h3 id="3-对于朋友"><a href="#3-对于朋友" class="headerlink" title="3.对于朋友"></a>3.对于朋友</h3><pre><code>友情的终极目的是理解、默契。
无论什么时候，无论怎样的心情，换位思考一下。
决定帮助朋友的时候，就不会去指望着他来回报。
</code></pre><h2 id="我羡慕你，但我还是做我自己"><a href="#我羡慕你，但我还是做我自己" class="headerlink" title="我羡慕你，但我还是做我自己"></a>我羡慕你，但我还是做我自己</h2><h2 id="—————————————————————————end"><a href="#—————————————————————————end" class="headerlink" title="—————————————————————————end"></a>—————————————————————————end</h2><h3 id="这个是分享给看见这篇文章的你，希望对你有用。"><a href="#这个是分享给看见这篇文章的你，希望对你有用。" class="headerlink" title="这个是分享给看见这篇文章的你，希望对你有用。"></a>这个是分享给看见这篇文章的你，希望对你有用。</h3><hr>
<table>
<thead>
<tr>
<th>序号</th>
<th>任务</th>
<th>对应</th>
</tr>
</thead>
<tbody>
<tr>
<td>1</td>
<td>写下任务</td>
<td>Plan</td>
</tr>
<tr>
<td>2</td>
<td>估算时间</td>
<td></td>
</tr>
<tr>
<td>3</td>
<td>做出取舍（排序）</td>
<td></td>
</tr>
<tr>
<td>4</td>
<td>分解任务（分到两小时内）</td>
<td>Do</td>
</tr>
<tr>
<td>5</td>
<td>预留时间</td>
<td></td>
</tr>
<tr>
<td>6</td>
<td>反馈调整（反省不足，改进，执行）</td>
<td>Check ＆ Adjust</td>
</tr>
<tr>
<td>7</td>
<td>学习实践（记录事情与收获）</td>
<td></td>
</tr>
</tbody>
</table>
<hr>
<h2 id="计划"><a href="#计划" class="headerlink" title="计划"></a>计划</h2><table>
<thead>
<tr>
<th>序号</th>
<th>优先度</th>
<th>内容</th>
<th>计划时间</th>
<th>完成与否</th>
</tr>
</thead>
<tbody>
<tr>
<td> 1</td>
<td>A1</td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td> 2</td>
<td>A2</td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td> 3</td>
<td>A3</td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td> 4</td>
<td>A4</td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td> 5</td>
<td>B1</td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td> 6</td>
<td>B2</td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td> 7</td>
<td>B3</td>
<td></td>
<td></td>
<td></td>
</tr>
</tbody>
</table>
<hr>
<h2 id="执行"><a href="#执行" class="headerlink" title="执行"></a>执行</h2><table>
<thead>
<tr>
<th>时间</th>
<th>内容</th>
<th>计划时间</th>
<th>实际时间</th>
</tr>
</thead>
<tbody>
<tr>
<td>9：00 - 10:00</td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>10：00 - 11：00</td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>11：30 - 1：30</td>
<td>中饭及午休</td>
<td></td>
<td></td>
</tr>
<tr>
<td>1：40 - 3：00</td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>3：20 - 5：00</td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>5：30 - 7：30</td>
<td>晚饭及休息放松</td>
<td></td>
<td></td>
</tr>
<tr>
<td>7：40 - 9：00</td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>9：20 - 10：30</td>
<td></td>
<td></td>
<td></td>
</tr>
</tbody>
</table>
<hr>
<h2 id="反省与改进"><a href="#反省与改进" class="headerlink" title="反省与改进:"></a>反省与改进:</h2><hr>
<h2 id="个人整体学习计划"><a href="#个人整体学习计划" class="headerlink" title="个人整体学习计划:"></a>个人整体学习计划:</h2><h3 id="1-工作与学习知识"><a href="#1-工作与学习知识" class="headerlink" title="1.工作与学习知识"></a>1.工作与学习知识</h3><h3 id="2-生活技能与知识"><a href="#2-生活技能与知识" class="headerlink" title="2.生活技能与知识"></a>2.生活技能与知识</h3><hr>
<h2 id="Tips"><a href="#Tips" class="headerlink" title="Tips:"></a>Tips:</h2><hr>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;研究生生活已经过了大半，从当初的后悔读研，不喜欢老师分配的项目，不喜欢被困在实验室枯燥的过日子，到现在的淡然面对，可能是因为离毕业不远了吧。现在想想当初自己考研应该是有逃离工作的念想，也有对自己能力的不信任。现在想想，我应该首先让自己强大起来，拥有追求梦想和决定生活的能力。&lt;/p&gt;
&lt;p&gt;说说这研究生学到的，主要是掌握了时间和分析解决问题的能力&lt;/p&gt;
    
    </summary>
    
      <category term="life" scheme="http://developeryang.top/categories/life/"/>
    
    
      <category term="研究生生活" scheme="http://developeryang.top/tags/%E7%A0%94%E7%A9%B6%E7%94%9F%E7%94%9F%E6%B4%BB/"/>
    
  </entry>
  
  <entry>
    <title>Markdown语法</title>
    <link href="http://developeryang.top/2017/08/05/Markdown%E8%AF%AD%E6%B3%95/"/>
    <id>http://developeryang.top/2017/08/05/Markdown语法/</id>
    <published>2017-08-05T07:12:18.000Z</published>
    <updated>2017-08-06T02:02:22.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="转载网络资源"><a href="#转载网络资源" class="headerlink" title="(转载网络资源)"></a>(转载网络资源)</h1><h1 id="Guide"><a href="#Guide" class="headerlink" title="Guide"></a>Guide</h1><p>这是一篇讲解如何正确使用 <strong>Markdown</strong> 的排版示例，学会这个很有必要，能让你的文章有更佳清晰的排版。</p>
<blockquote>
<p>引用文本：Markdown is a text formatting syntax inspired</p>
</blockquote>
<h2 id="语法指导"><a href="#语法指导" class="headerlink" title="语法指导"></a>语法指导</h2><a id="more"></a>
<h3 id="普通内容"><a href="#普通内容" class="headerlink" title="普通内容"></a>普通内容</h3><p>这段内容展示了在内容里面一些小的格式，比如：</p>
<ul>
<li><strong>加粗</strong> - <code>**加粗**</code></li>
<li><em>倾斜</em> - <code>*倾斜*</code></li>
<li><del>删除线</del> - <code>~~删除线~~</code></li>
<li><code>Code 标记</code> - <code>Code 标记</code></li>
<li><a href="http://github.com" target="_blank" rel="external">超级链接</a> - <code>[超级链接](http://github.com)</code></li>
<li><a href="mailto:username@gmail.com" target="_blank" rel="external">username@gmail.com</a> - <code>[username@gmail.com](mailto:username@gmail.com)</code></li>
</ul>
<h3 id="提及用户"><a href="#提及用户" class="headerlink" title="提及用户"></a>提及用户</h3><p>@foo @bar @someone … 通过 @ 可以在发帖和回帖里面提及用户，信息提交以后，被提及的用户将会收到系统通知。以便让他来关注这个帖子或回帖。</p>
<h3 id="表情符号-Emoji"><a href="#表情符号-Emoji" class="headerlink" title="表情符号 Emoji"></a>表情符号 Emoji</h3><p>支持表情符号，你可以用系统默认的 Emoji 符号（无法支持 Windows 用户）。<br>也可以用图片的表情，输入 <code>:</code> 将会出现智能提示。</p>
<h4 id="一些表情例子"><a href="#一些表情例子" class="headerlink" title="一些表情例子"></a>一些表情例子</h4><p>:smile: :laughing: :dizzy_face: :sob: :cold_sweat: :sweat_smile:  :cry: :triumph: :heart_eyes: :relaxed: :sunglasses: :weary:</p>
<p>:+1: :-1: :100: :clap: :bell: :gift: :question: :bomb: :heart: :coffee: :cyclone: :bow: :kiss: :pray: :sweat_drops: :hankey: :exclamation: :anger:</p>
<h3 id="大标题-Heading-3"><a href="#大标题-Heading-3" class="headerlink" title="大标题 - Heading 3"></a>大标题 - Heading 3</h3><p>你可以选择使用 H2 至 H6，使用 ##(N) 打头，H1 不能使用，会自动转换成 H2。</p>
<blockquote>
<p>NOTE: 别忘了 # 后面需要有空格！</p>
</blockquote>
<h4 id="Heading-4"><a href="#Heading-4" class="headerlink" title="Heading 4"></a>Heading 4</h4><h5 id="Heading-5"><a href="#Heading-5" class="headerlink" title="Heading 5"></a>Heading 5</h5><h6 id="Heading-6"><a href="#Heading-6" class="headerlink" title="Heading 6"></a>Heading 6</h6><h3 id="图片"><a href="#图片" class="headerlink" title="图片"></a>图片</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">![alt 文本](http://image-path.png)</div><div class="line">![alt 文本](http://image-path.png &quot;图片 Title 值&quot;)</div><div class="line">![设置图片宽度高度](http://image-path.png =300x200)</div><div class="line">![设置图片宽度](http://image-path.png =300x)</div><div class="line">![设置图片高度](http://image-path.png =x200)</div></pre></td></tr></table></figure>
<h3 id="代码块"><a href="#代码块" class="headerlink" title="代码块"></a>代码块</h3><h4 id="普通"><a href="#普通" class="headerlink" title="普通"></a>普通</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">*emphasize*    **strong**</div><div class="line">_emphasize_    __strong__</div><div class="line">@a = 1</div></pre></td></tr></table></figure>
<h4 id="语法高亮支持"><a href="#语法高亮支持" class="headerlink" title="语法高亮支持"></a>语法高亮支持</h4><p>如果在 <figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"></div><div class="line">##### 演示 Ruby 代码高亮</div><div class="line"></div><div class="line">```ruby</div><div class="line">class PostController &lt; ApplicationController</div><div class="line">  def index</div><div class="line">    @posts = Post.last_actived.limit(10)</div><div class="line">  end</div><div class="line">end</div></pre></td></tr></table></figure></p>
<h5 id="演示-Rails-View-高亮"><a href="#演示-Rails-View-高亮" class="headerlink" title="演示 Rails View 高亮"></a>演示 Rails View 高亮</h5><figure class="highlight erb"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">&lt;%= @posts.each do |post| %&gt;</div><div class="line">&lt;div class="post"&gt;&lt;/div&gt;</div><div class="line">&lt;% end %&gt;</div></pre></td></tr></table></figure>
<h5 id="演示-YAML-文件"><a href="#演示-YAML-文件" class="headerlink" title="演示 YAML 文件"></a>演示 YAML 文件</h5><figure class="highlight yml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="attr">zh-CN:</span></div><div class="line"><span class="attr">  name:</span> 姓名</div><div class="line"><span class="attr">  age:</span> 年龄</div></pre></td></tr></table></figure>
<blockquote>
<p>Tip: 语言名称支持下面这些: <code>ruby</code>, <code>python</code>, <code>js</code>, <code>html</code>, <code>erb</code>, <code>css</code>, <code>coffee</code>, <code>bash</code>, <code>json</code>, <code>yml</code>, <code>xml</code> …</p>
</blockquote>
<h3 id="有序、无序列表"><a href="#有序、无序列表" class="headerlink" title="有序、无序列表"></a>有序、无序列表</h3><h4 id="无序列表"><a href="#无序列表" class="headerlink" title="无序列表"></a>无序列表</h4><ul>
<li>Ruby<ul>
<li>Rails<ul>
<li>ActiveRecord</li>
</ul>
</li>
</ul>
</li>
<li>Go<ul>
<li>Gofmt</li>
<li>Revel</li>
</ul>
</li>
<li>Node.js<ul>
<li>Koa</li>
<li>Express</li>
</ul>
</li>
</ul>
<h4 id="有序列表"><a href="#有序列表" class="headerlink" title="有序列表"></a>有序列表</h4><ol>
<li>Node.js<ol>
<li>Express</li>
<li>Koa</li>
<li>Sails</li>
</ol>
</li>
<li>Ruby<ol>
<li>Rails</li>
<li>Sinatra</li>
</ol>
</li>
<li>Go</li>
</ol>
<h3 id="表格"><a href="#表格" class="headerlink" title="表格"></a>表格</h3><p>如果需要展示数据什么的，可以选择使用表格哦</p>
<table>
<thead>
<tr>
<th>header 1</th>
<th>header 3</th>
</tr>
</thead>
<tbody>
<tr>
<td>cell 1</td>
<td>cell 2</td>
</tr>
<tr>
<td>cell 3</td>
<td>cell 4</td>
</tr>
<tr>
<td>cell 5</td>
<td>cell 6</td>
</tr>
</tbody>
</table>
<h3 id="段落"><a href="#段落" class="headerlink" title="段落"></a>段落</h3><p>留空白的换行，将会被自动转换成一个段落，会有一定的段落间距，便于阅读。</p>
<p>请注意后面 Markdown 源代码的换行留空情况。</p>
<h3 id="视频插入"><a href="#视频插入" class="headerlink" title="视频插入"></a>视频插入</h3><p>目前支持 Youtube 和 Youku 两家的视频插入，你只需要复制视频播放页面，浏览器地址栏的网页 URL 地址，并粘贴到话题／回复文本框，提交以后将自动转换成视频播放器。</p>
<h4 id="例如"><a href="#例如" class="headerlink" title="例如"></a>例如</h4><p><strong>Youtube</strong></p>
<p><a href="https://www.youtube.com/watch?v=CvVvwh3BRq8" target="_blank" rel="external">https://www.youtube.com/watch?v=CvVvwh3BRq8</a></p>
<p><strong>Vimeo</strong></p>
<p><a href="https://vimeo.com/199770305" target="_blank" rel="external">https://vimeo.com/199770305</a></p>
<p><strong>Youku</strong></p>
<p><a href="http://v.youku.com/v_show/id_XMjQzMTY1MDk3Ng==.html" target="_blank" rel="external">http://v.youku.com/v_show/id_XMjQzMTY1MDk3Ng==.html</a></p>
<p>···</p>
]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;转载网络资源&quot;&gt;&lt;a href=&quot;#转载网络资源&quot; class=&quot;headerlink&quot; title=&quot;(转载网络资源)&quot;&gt;&lt;/a&gt;(转载网络资源)&lt;/h1&gt;&lt;h1 id=&quot;Guide&quot;&gt;&lt;a href=&quot;#Guide&quot; class=&quot;headerlink&quot; title=&quot;Guide&quot;&gt;&lt;/a&gt;Guide&lt;/h1&gt;&lt;p&gt;这是一篇讲解如何正确使用 &lt;strong&gt;Markdown&lt;/strong&gt; 的排版示例，学会这个很有必要，能让你的文章有更佳清晰的排版。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;引用文本：Markdown is a text formatting syntax inspired&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;语法指导&quot;&gt;&lt;a href=&quot;#语法指导&quot; class=&quot;headerlink&quot; title=&quot;语法指导&quot;&gt;&lt;/a&gt;语法指导&lt;/h2&gt;
    
    </summary>
    
      <category term="technology" scheme="http://developeryang.top/categories/technology/"/>
    
    
      <category term="Markdown" scheme="http://developeryang.top/tags/Markdown/"/>
    
  </entry>
  
  <entry>
    <title>九九乘法表</title>
    <link href="http://developeryang.top/2017/08/05/%E4%B9%9D%E4%B9%9D%E4%B9%98%E6%B3%95%E8%A1%A8/"/>
    <id>http://developeryang.top/2017/08/05/九九乘法表/</id>
    <published>2017-08-05T05:43:10.000Z</published>
    <updated>2017-08-06T02:02:40.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="使用Python实现九九乘法表"><a href="#使用Python实现九九乘法表" class="headerlink" title="使用Python实现九九乘法表"></a>使用Python实现九九乘法表</h2><h3 id="1-利用循环来实现"><a href="#1-利用循环来实现" class="headerlink" title="1.利用循环来实现"></a>1.利用循环来实现</h3><p>一般方法</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"># !/Library/Frameworks/Python.framework/Versions/3.6/bin/python3</div><div class="line"># -*- coding: utf-8 -*-</div><div class="line"></div><div class="line"># 9 * 9</div><div class="line">for i in range(1, 10):</div><div class="line">    for j in range(1, i+1):</div><div class="line">        print(&apos;%d * %d = %d&apos; % (i, j, i*j),end = &apos;\t&apos;)</div><div class="line">    print(&apos;\n&apos;)</div></pre></td></tr></table></figure>
<a id="more"></a>
<p>使用format，增强可读性</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"># !/Library/Frameworks/Python.framework/Versions/3.6/bin/python3</div><div class="line"># -*- coding: utf-8 -*-</div><div class="line"></div><div class="line"># 9 * 9</div><div class="line">for i in range(1, 10):</div><div class="line">    for j in range(1, i+1):</div><div class="line">        print(&apos;&#123;0&#125; * &#123;1&#125; = &#123;2&#125;&apos;.format(i, j, i*j),end = &apos;\t&apos;)</div><div class="line">    print(&apos;\n&apos;)</div></pre></td></tr></table></figure>
<h3 id="2-利用递归来实现"><a href="#2-利用递归来实现" class="headerlink" title="2.利用递归来实现"></a>2.利用递归来实现</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line"># !/Library/Frameworks/Python.framework/Versions/3.6/bin/python3</div><div class="line"># -*- coding: utf-8 -*-</div><div class="line"></div><div class="line"># 9 * 9</div><div class="line"></div><div class="line">def f(i):</div><div class="line">    if i&gt;=1:</div><div class="line">        f(i-1)</div><div class="line">        print([&apos;%d * %d = %d&apos; % (j,i,i*j) for j in range(1, i+1)])</div><div class="line"></div><div class="line">if __name__ == &apos;__main__&apos;:</div><div class="line">    f(9)</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;使用Python实现九九乘法表&quot;&gt;&lt;a href=&quot;#使用Python实现九九乘法表&quot; class=&quot;headerlink&quot; title=&quot;使用Python实现九九乘法表&quot;&gt;&lt;/a&gt;使用Python实现九九乘法表&lt;/h2&gt;&lt;h3 id=&quot;1-利用循环来实现&quot;&gt;&lt;a href=&quot;#1-利用循环来实现&quot; class=&quot;headerlink&quot; title=&quot;1.利用循环来实现&quot;&gt;&lt;/a&gt;1.利用循环来实现&lt;/h3&gt;&lt;p&gt;一般方法&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;# !/Library/Frameworks/Python.framework/Versions/3.6/bin/python3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;# -*- coding: utf-8 -*-&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;# 9 * 9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;for i in range(1, 10):&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    for j in range(1, i+1):&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        print(&amp;apos;%d * %d = %d&amp;apos; % (i, j, i*j),end = &amp;apos;\t&amp;apos;)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    print(&amp;apos;\n&amp;apos;)&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="technology" scheme="http://developeryang.top/categories/technology/"/>
    
    
      <category term="python" scheme="http://developeryang.top/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>基于pickle模块的学生管理系统</title>
    <link href="http://developeryang.top/2017/08/03/%E5%9F%BA%E4%BA%8Epickle%E6%A8%A1%E5%9D%97%E7%9A%84%E5%AD%A6%E7%94%9F%E7%AE%A1%E7%90%86%E7%B3%BB%E7%BB%9F/"/>
    <id>http://developeryang.top/2017/08/03/基于pickle模块的学生管理系统/</id>
    <published>2017-08-03T12:54:39.000Z</published>
    <updated>2017-08-06T02:05:28.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="利用模块pickle完成学生信息管理系统"><a href="#利用模块pickle完成学生信息管理系统" class="headerlink" title="利用模块pickle完成学生信息管理系统"></a>利用模块pickle完成学生信息管理系统</h1><p>Python的pickle模块实现了基本的数据序列和反序列化。通过pickle模块的序列化操作我们能够将程序中运行的对象信息保存到文件中去，永久存储；通过pickle模块的反序列化操作，我们能够从文件中创建上一次程序保存的对象。</p>
<p>学生系统功能分为</p>
<ol>
<li>Add </li>
<li>Delect </li>
<li>Show </li>
<li>Save </li>
<li>Read </li>
<li>Quit</li>
</ol>
<a id="more"></a>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div><div class="line">113</div><div class="line">114</div><div class="line">115</div><div class="line">116</div><div class="line">117</div><div class="line">118</div></pre></td><td class="code"><pre><div class="line"># !/Library/Frameworks/Python.framework/Versions/3.6/bin/python3</div><div class="line"># -*- coding: utf-8 -*-</div><div class="line"></div><div class="line">import pickle</div><div class="line"></div><div class="line">class Student:</div><div class="line">    def __init__(self, studentID, name, sex, classID):</div><div class="line">        self.studentID = studentID</div><div class="line">        self.name = name</div><div class="line">        self.sex = sex</div><div class="line">        self.classID = classID</div><div class="line"></div><div class="line">class StudentManager:</div><div class="line">    def __init__(self):</div><div class="line">        self.students = []</div><div class="line"></div><div class="line">    def mainMenu(self):</div><div class="line">        print(&apos;\nTips:&apos;)</div><div class="line">        print(&apos;1.Add studentInfo&apos;)</div><div class="line">        print(&apos;2.Delect studentInfo&apos;)</div><div class="line">        print(&apos;3.Show studentInfo&apos;)</div><div class="line">        print(&apos;4.Save studentInfo&apos;)</div><div class="line">        print(&apos;5.Read studentInfo&apos;)</div><div class="line">        print(&apos;0.Quit&apos;)</div><div class="line">        flag = input(&apos;Select Operation:&apos;)</div><div class="line">        while (flag &lt; &apos;0&apos; or flag &gt; &apos;5&apos;):</div><div class="line">            print(&apos;Input Error!&apos;)</div><div class="line">            flag = input(&apos;Select Again:&apos;)</div><div class="line">        print(&apos;------------&apos;)</div><div class="line">        if (flag == &apos;1&apos;):</div><div class="line">            self.addStu()</div><div class="line">            self.mainMenu()</div><div class="line">        if (flag == &apos;2&apos;):</div><div class="line">            self.delStu()</div><div class="line">            self.mainMenu()</div><div class="line">        if (flag == &apos;3&apos;):</div><div class="line">            self.printStu()</div><div class="line">            self.mainMenu()</div><div class="line">        if (flag == &apos;4&apos;):</div><div class="line">            self.writeStu()</div><div class="line">            self.mainMenu()</div><div class="line">        if (flag == &apos;5&apos;):</div><div class="line">            self.readStu()</div><div class="line">            self.mainMenu()</div><div class="line">        if (flag == &apos;0&apos;):</div><div class="line">            self.writeStu() # Save before quit</div><div class="line">            print(&apos;End&apos;)</div><div class="line"></div><div class="line">    def addStu(self):</div><div class="line">        studentID = input(&apos;Plaese input studentID: &apos;)</div><div class="line">        while (self.findByID(studentID) != -1):</div><div class="line">            print(&apos;studentID repeat, please input again&apos;)</div><div class="line">            studentID = input(&apos;Please input studentID again&apos;)</div><div class="line">        name = input(&apos;Please input student name: &apos;)</div><div class="line">        sex = input(&apos;Please input student sex: &apos;)</div><div class="line">        sex</div><div class="line">        while ((sex != &apos;f&apos;) and (sex != &apos;m&apos;)):</div><div class="line">            print(&apos;Sex input error, please input sex again&apos;)</div><div class="line">            sex = input(&apos;Please input student sex again: &apos;)</div><div class="line">        classID = input(&apos;Please input student classID: &apos;)</div><div class="line">        student = Student(studentID, name, sex, classID)</div><div class="line">        self.students.append(student)</div><div class="line">        print(&apos;Add success!&apos;)</div><div class="line"></div><div class="line">    def delStu(self):</div><div class="line">        studentID = input(&apos;Please input the studentID you want to del: &apos;)</div><div class="line">        i = self.findByID(studentID)</div><div class="line">        while (i == -1):</div><div class="line">            print(&apos;No this studentID, please input studentID again!&apos;)</div><div class="line">            studentID = input(&quot;Please input the studentID again: &quot;)</div><div class="line">            i = self.findByID(studentID)</div><div class="line">        del(self.students[i])</div><div class="line">        print(&apos;Del success!&apos;)</div><div class="line"></div><div class="line">    def printStu(self):</div><div class="line">        print(&apos;----------&apos;)</div><div class="line">        print(&apos;%7s%7s%7s%7s&apos;%(&apos;StudentID&apos;, &apos;Name&apos;, &apos;Sex&apos;, &apos; ClassID&apos;))</div><div class="line">        for student in self.students:</div><div class="line">            print(&apos;%7s%7s%7s%7s&apos;%(student[&apos;studentID&apos;], student[&apos;name&apos;], student[&apos;sex&apos;], student[&apos;classID&apos;]))</div><div class="line"></div><div class="line">    def findByID(self, studentID):</div><div class="line">        i = 0;</div><div class="line">        for student in self.students:</div><div class="line">            if (student[&apos;studentID&apos;] == studentID):</div><div class="line">                return i # return number</div><div class="line">            i = i+1</div><div class="line">        return -1 # find fail</div><div class="line"></div><div class="line">    def writeStu(self):</div><div class="line">        try:</div><div class="line">            fout = open(r&apos;/Users/yangyang/Developer/Python/file/save.db&apos;, &apos;wb&apos;)</div><div class="line">        except IOError as e: ###python3</div><div class="line">            print(&apos;No file exist!&apos;)</div><div class="line">        else:</div><div class="line">            pickle.dump(self.students, fout)</div><div class="line">            fout.close()</div><div class="line">            print(&apos;Save success!&apos;)</div><div class="line"></div><div class="line">    def readStu(self):</div><div class="line">        try:</div><div class="line">            fin = open(r&apos;/Users/yangyang/Developer/Python/file/save.db&apos;, &apos;rb&apos;)</div><div class="line">        except FileNotFoundError as e: ### python3: as</div><div class="line">            print(&apos;No file exist, please save first!&apos;)</div><div class="line">        else:</div><div class="line">            print(&apos;On reading&apos;, end=&apos;&apos;)</div><div class="line">            print(&apos;...&apos;, end=&apos;&apos;)</div><div class="line">            self.students = pickle.load(fin)</div><div class="line">            print(&apos;...&apos;)</div><div class="line">            print(&apos;Read file success!&apos;)</div><div class="line">            fin.close()</div><div class="line"></div><div class="line">sm = StudentManager()</div><div class="line">print(&apos;\n\n&apos;)</div><div class="line">print(&apos;===========================&apos;)</div><div class="line">print(&apos;    StudentManagerSystem&apos;)</div><div class="line">print(&apos;===========================&apos;)</div><div class="line">sm.readStu()</div><div class="line">sm.mainMenu()</div></pre></td></tr></table></figure>
<p>写完后发现一直报错 </p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">self.students = pickle.load(fin)</div><div class="line">EOFError: Ran out of input</div></pre></td></tr></table></figure>
<p>最后在<br><a href="https://stackoverflow.com/questions/24791987/why-do-i-get-pickle-eoferror-ran-out-of-input-reading-an-empty-file" target="_blank" rel="external">Stack OverFlow</a>找到答案。因为读取的文件为空。</p>
<h2 id="解决办法："><a href="#解决办法：" class="headerlink" title="解决办法："></a>解决办法：</h2><p>在save.db里面事先写入数据</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line"># !/Library/Frameworks/Python.framework/Versions/3.6/bin/python3</div><div class="line"># -*- coding: utf-8 -*-</div><div class="line"></div><div class="line">import pickle</div><div class="line"></div><div class="line">student = &#123;&apos;studentID&apos;: &apos;0001&apos;, &apos;name&apos;:&apos;W&apos;, &apos;sex&apos;: &apos;F&apos;, &apos;classID&apos;:&apos;1111&apos;&#125;</div><div class="line"></div><div class="line"></div><div class="line">students = []</div><div class="line">students.append(student)</div><div class="line"></div><div class="line">fout = open(r&apos;/Users/yangyang/Developer/Python/file/save.db&apos;, &apos;wb&apos;)</div><div class="line">pickle.dump(students, fout)</div><div class="line">print(&apos;Save success!&apos;)</div><div class="line">fout.close()</div></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;利用模块pickle完成学生信息管理系统&quot;&gt;&lt;a href=&quot;#利用模块pickle完成学生信息管理系统&quot; class=&quot;headerlink&quot; title=&quot;利用模块pickle完成学生信息管理系统&quot;&gt;&lt;/a&gt;利用模块pickle完成学生信息管理系统&lt;/h1&gt;&lt;p&gt;Python的pickle模块实现了基本的数据序列和反序列化。通过pickle模块的序列化操作我们能够将程序中运行的对象信息保存到文件中去，永久存储；通过pickle模块的反序列化操作，我们能够从文件中创建上一次程序保存的对象。&lt;/p&gt;
&lt;p&gt;学生系统功能分为&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Add &lt;/li&gt;
&lt;li&gt;Delect &lt;/li&gt;
&lt;li&gt;Show &lt;/li&gt;
&lt;li&gt;Save &lt;/li&gt;
&lt;li&gt;Read &lt;/li&gt;
&lt;li&gt;Quit&lt;/li&gt;
&lt;/ol&gt;
    
    </summary>
    
      <category term="technology" scheme="http://developeryang.top/categories/technology/"/>
    
    
      <category term="python" scheme="http://developeryang.top/tags/python/"/>
    
  </entry>
  
</feed>
